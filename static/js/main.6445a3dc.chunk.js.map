{"version":3,"sources":["components/monthCard.jsx","App.js","index.js"],"names":["MonthCard","state","showUsers","this","props","countUserEachMonth","month","capitalize","arrayOfUsers","Card","style","width","bg","className","Body","Title","Button","variant","size","onClick","setState","console","log","ListGroup","map","userOfThisMonth","index","Item","key","bsPrefix","firstName","Component","App","getData","fetch","then","response","json","data","users","extractDate","value","Date","toLocaleDateString","sortMonths","a","b","correctMonthsOrder","indexOf","getAllMonthes","allMonths","user","date","dob","includes","push","sort","months","s","charAt","toUpperCase","slice","getArrayOfUsers","filter","usersOfMonth","length","Container","Row","Col","sm","md","React","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6445a3dc.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nimport { Card, Button, ListGroup } from 'react-bootstrap';\r\n\r\nexport class MonthCard extends Component {\r\n\tconstructor () {\r\n\t\tsuper ();\r\n\r\n\t\tthis.state = {\r\n\t\t\tshowUsers: false\r\n\t\t}\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst { countUserEachMonth, month, capitalize, arrayOfUsers } = this.props;\r\n\t\treturn (\r\n\t\t\t\t<Card style={{ width: '17rem' }} bg={countUserEachMonth(month)} className=\"m-2\">\r\n          <Card.Body>\r\n            <Card.Title>{capitalize(month)}</Card.Title>\r\n            <Button \r\n                variant=\"outline-light\" \r\n                size=\"sm\"\r\n                onClick={() => {\r\n                  this.setState({\r\n                    showUsers: !this.state.showUsers\r\n                   });\r\n                  console.log(this.state.showUsers);\r\n                  }}\r\n            >\r\n            Смотреть пользователей</Button>\r\n            {this.state.showUsers ? \r\n              (<ListGroup className=\"mt-2\">\r\n                {arrayOfUsers.map((userOfThisMonth, index) => (\r\n                  <ListGroup.Item key={index} bsPrefix=\"list-group-transparent\">\r\n\t\t\t\t\t\t\t\t\t\t{userOfThisMonth.firstName}\r\n                  </ListGroup.Item>\r\n                ))}\r\n              </ListGroup>) : null\r\n            }\r\n          </Card.Body>\r\n        </Card>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default MonthCard;","import React from 'react';\nimport './App.css';\nimport {Container, Row, Col} from 'react-bootstrap';\nimport MonthCard from './components/monthCard.jsx';\n\nexport class App extends React.Component {\n  constructor() {\n    super();\n\n    this.state = {\n      users: [],\n      months: []\n    }\n  }\n  \n  componentDidMount() {\n    this.getData();\n  }\n\n  componentDidUpdate(){\n    if (this.state.months.length === 0) {\n      this.getAllMonthes();\n    }\n  }\n\n//Receiving users data\n  getData = () => {\n    fetch(`https://yalantis-react-school-api.yalantis.com/api/task0/users`)\n    .then(response=> response.json())\n    .then((data) => {\n      this.setState({\n        users: data\n      });\n    });\n  }\n\n  //Getting month if birth of each user\n  extractDate = value => {\n    const options = { month: 'long'};\n    const date = new Date(value);\n    const month = date.toLocaleDateString('ua-UA', options);\n    return month;\n  }\n\n  sortMonths = (a, b) => {\n    var correctMonthsOrder = [\"январь\", \"февраль\", \"март\", \"апрель\", \"май\", \"июнь\", \"июль\", \"август\", \"сентябрь\", \"октябрь\", \"ноябрь\", \"декабрь\"];\n    return correctMonthsOrder.indexOf(a) - correctMonthsOrder.indexOf(b);\n  }\n\n  getAllMonthes = () => {\n    const allMonths = [];\n    const allUsers = this.state.users;\n    allUsers.map(user => {\n      var date = this.extractDate(user.dob);\n      if (!allMonths.includes(date)) {\n        allMonths.push(date);\n      }\n      return allMonths.sort(this.sortMonths);\n    });\n    this.setState({\n        months: allMonths\n      }, function () {console.log(\"state of months - \", this.state.months);\n    });  \n  }\n  \n  capitalize = (s) => {\n    if (typeof s !== 'string') return '';\n    return s.charAt(0).toUpperCase() + s.slice(1)\n  }\n\n//Extracting array of users certain month\n  getArrayOfUsers = (month) => {\n    const allUsers = this.state.users;\n    var arrayOfUsers = allUsers.filter(user => {\n      return month === this.extractDate(user.dob);\n    });\n    return arrayOfUsers;\n  }\n\n//Coloring blocks of months depends on quantity\n  countUserEachMonth = (month) => {\n    \n    var usersOfMonth = this.getArrayOfUsers(month);\n\n    if(usersOfMonth.length >= 0 && usersOfMonth.length <= 2) {\n      return \"secondary\";\n    } else if (usersOfMonth.length >= 3 && usersOfMonth.length <= 6) {\n      return \"primary\";\n    } else if (usersOfMonth.length >= 7 && usersOfMonth.length <= 10) {\n      return \"success\";\n    } else {\n      return \"danger\";\n    }\n  }\n\n  render() {\n    return (\n      <div>\n      <Container>\n          <Row className=\"mb-4 mt-4\">\n            <Col >\n              <h3 className=\"text-center\">Дни рождения наших пользователей</h3>\n            </Col>\n          </Row>\n          <Row className=\"justify-content-around\">\n            {this.state.months.map((month,index) => {\n              return (\n                 <Col sm=\"4\" md=\"3\" key={index}>\n                    <MonthCard \n                      countUserEachMonth={this.countUserEachMonth}\n                      month={month}\n                      capitalize={this.capitalize}\n                      arrayOfUsers={this.getArrayOfUsers(month)}\n                    />\n                </Col>\n                );\n            })}\n          </Row>\n        </Container>\n      </div>\n    );\n  }\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}